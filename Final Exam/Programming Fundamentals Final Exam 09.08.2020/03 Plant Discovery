# Programming Fundamentals Final Exam 09.08.2020
# Problem 3. Plant Discovery

n = int(input())
plants_collection = {}
plants_rating = {}

for _ in range(n):
    plants = input().split("<->")
    name, rarity = plants
    rarity = float(rarity)
    plants_collection[name] = [rarity]
    plants_rating[name] = []

tokens = input()
while not tokens == "Exhibition":
    tokens = tokens.split(": ")
    command = tokens[0]
    elements = tokens[1].split(" - ")
    name = elements[0]
    if name not in plants_collection:
        print("error")
        continue
    if command == "Rate":
        rating = float(elements[1])
        plants_rating[name].append(rating)
    elif command == "Update":
        new_rarity = float(elements[1])
        plants_collection[name] = [new_rarity]
    elif command == "Reset":
        plants_rating[name] = 0
    tokens = input()

for key, value in plants_rating.items():
    if value == 0:
        plants_rating[key] = value
        continue
    else:
        plants_rating[key] = sum(value)/len(value)

sorted_plant_collection = sorted(plants_collection.items(), key=lambda x: x[1], reverse=True)
sorted_plant_rating = sorted(plants_rating.items(), key=lambda x: x[1], reverse=True)
print(sorted_plant_collection)
print(sorted_plant_rating)


Check this tomorrow: 100 / 100
collection = {}

n = int(input())

for i in range(n):
    line = input().split('<->')
    plant = line[0]
    rarity = int(line[1])
    collection[plant] = [rarity]

while True:
    command_line = input()
    if command_line == 'Exhibition':
        break
    command, data = command_line.split(': ')
    data = data.split(' - ')
    plant = data[0]
    if plant not in collection:
        print("error")
        continue
    if command == 'Rate':
        rating = int(data[1])
        collection[plant].append(rating)
    elif command == 'Update':
        new_rarity = int(data[1])
        collection[plant][0] = new_rarity
    elif command == 'Reset':
        rarity = collection[plant][0]
        collection[plant].clear()
        collection[plant] = [rarity]
    else:
        print('error')
edit_collection = {}
for k, v in collection.items():
    if len(v) - 1 > 0:
        avg = sum(v[1:]) / (len(v) - 1)
    else:
        avg = 0
    edit_collection[k] = [v[0], avg]

print("Plants for the exhibition:")
for plant, stats in sorted(edit_collection.items(), key=lambda x: (-x[1][0], -x[1][1])):
    rarity = stats[0]
    avg = stats[1]
    print(f"- {plant}; Rarity: {rarity}; Rating: {avg:.2f}")
